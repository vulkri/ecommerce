openapi: 3.0.3
info:
  title: Enigma DEMO API
  version: 1.0.0
  description: REST API DEMO
paths:
  /orders/create/:
    post:
      operationId: orders_create_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /orders/force-remainder/:
    patch:
      operationId: orders_force_remainder_partial_update
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedForceRemainderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedForceRemainderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedForceRemainderRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForceRemainder'
          description: ''
  /orders/top-sellers/:
    get:
      operationId: orders_top_sellers_list
      parameters:
      - in: query
        name: date_max
        schema:
          type: string
        description: Order created at maximum date.
      - in: query
        name: date_min
        schema:
          type: string
        description: Order created at minimum date.
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: products_max
        schema:
          type: integer
        description: Maximum number of products to return
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopSellersList'
          description: ''
  /products/:
    get:
      operationId: products_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
        description: 'Filter by: category_id.'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Order by: category__name, name, price (reverse: "-").'
      - in: query
        name: photo
        schema:
          type: string
          format: byte
        description: Photo file
      - in: query
        name: price__gte
        schema:
          type: number
          format: double
        description: Price greater or equal.
      - in: query
        name: price__lte
        schema:
          type: number
          format: double
        description: Price less or equal.
      - in: query
        name: search
        schema:
          type: string
        description: 'Search in: category__name, description, name.'
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /products/categories/:
    get:
      operationId: products_categories_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Order by: name (reverse: "-").'
      - in: query
        name: search
        schema:
          type: string
        description: 'Search in: name.'
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: products_categories_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /products/categories/{id}/:
    get:
      operationId: products_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: products_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: products_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: products_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
      required:
      - id
      - name
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 30
      required:
      - name
    ForceRemainder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        remainder_force:
          type: boolean
          readOnly: true
      required:
      - id
      - remainder_force
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        client_email:
          type: string
          format: email
          readOnly: true
        client_first_name:
          type: string
          readOnly: true
        client_last_name:
          type: string
          readOnly: true
        shipment_address:
          type: string
        payment_deadline:
          type: string
          format: date-time
          readOnly: true
        order_total:
          type: number
          format: double
          readOnly: true
        order_data:
          type: array
          items:
            $ref: '#/components/schemas/OrderData'
      required:
      - client_email
      - client_first_name
      - client_last_name
      - created_at
      - id
      - order_data
      - order_total
      - payment_deadline
      - shipment_address
    OrderData:
      type: object
      properties:
        product:
          type: integer
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        product_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - product
      - product_price
      - quantity
    OrderDataRequest:
      type: object
      properties:
        product:
          type: integer
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - product
      - quantity
    OrderRequest:
      type: object
      properties:
        shipment_address:
          type: string
          minLength: 1
        order_data:
          type: array
          items:
            $ref: '#/components/schemas/OrderDataRequest'
      required:
      - order_data
      - shipment_address
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedTopSellersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopSellers'
    PatchedCategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 30
    PatchedForceRemainderRequest:
      type: object
      properties:
        order_id:
          type: integer
          writeOnly: true
    PatchedProductRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 45
        description:
          type: string
          minLength: 1
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        category:
          type: integer
        photo:
          type: string
          format: binary
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 45
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        category:
          type: integer
        category_name:
          type: string
          readOnly: true
        photo:
          type: string
          format: uri
        thumbnail:
          type: string
          format: uri
          readOnly: true
      required:
      - category
      - category_name
      - description
      - id
      - name
      - photo
      - price
      - thumbnail
    ProductRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 45
        description:
          type: string
          minLength: 1
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        category:
          type: integer
        photo:
          type: string
          format: binary
      required:
      - category
      - description
      - name
      - photo
      - price
    TopSellers:
      type: object
      properties:
        product__name:
          type: string
        sold:
          type: integer
      required:
      - product__name
      - sold
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
